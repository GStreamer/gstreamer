[constants]
macosx_sdk      = '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk'
macosx_minver   = '10.13'
qt_prefix       = HOME_DIR / 'Qt/5.15.2/clang_64'
common_args     = ['--sysroot=' + macosx_sdk, '-mmacosx-version-min=' + macosx_minver, '-F' + macosx_sdk / 'System/Library/Frameworks', '-F' + qt_prefix / 'lib']
# Uncomment for x86 macs:
#homebrew_prefix = '/usr/local'
# Uncomment for arm64 macs:
homebrew_prefix = '/opt/homebrew'
openssl_pc      = homebrew_prefix / 'opt/openssl@1.1/lib/pkgconfig'

[built-in options]
c_args              = common_args
cpp_args            = common_args
objc_args           = common_args
objcpp_args         = common_args
c_link_args         = common_args
cpp_link_args       = common_args
objc_link_args      = common_args
objcpp_link_args    = common_args
pkg_config_path     = [openssl_pc]
force_fallback_for  = ['zlib', 'libffi', 'glib', 'libvpx']

[project options]
ges = 'enabled'
rs = 'enabled'
libnice = 'enabled'
tls = 'enabled'
introspection = 'disabled'
python = 'disabled'
qt5 = 'enabled'

[libnice:project options]
crypto-library = 'openssl'

[glib-networking:project options]
gnutls = 'disabled'
openssl = 'enabled'

[gst-plugins-base:project options]
gl = 'enabled'
pango = 'enabled'
gl_api = ['opengl']
gl_platform = ['cgl']
gl_winsys = ['cocoa']

[gst-plugins-bad:project options]
applemedia = 'enabled'
webrtc = 'enabled'
dtls = 'enabled'
sctp = 'enabled'
srtp = 'enabled'

[gst-plugins-good:project options]
cairo = 'enabled'
soup = 'enabled'
soup-lookup-dep = 'true'
qt-method = 'qmake'
osxaudio = 'enabled'
vpx = 'enabled'

[gst-plugins-rs:project options]
gtk4 = 'enabled'

[gtk:project options]
x11-backend = 'false'

[binaries]
qmake = qt_prefix / 'bin/qmake'
pkgconfig = homebrew_prefix / 'opt/pkg-config/bin/pkg-config'
# cmake has horribly broken behaviour where it will hunt your
# /Library/Frameworks for dependencies like zlib with no way to disable it,
# which means if you have a gstreamer prefix, you will end up picking up all
# headers from it at compile time (but not configure time). So just disable
# picking up deps with cmake entirely.
cmake = 'false'

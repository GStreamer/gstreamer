// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GES {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class CommandLineFormatter : GES.Formatter {

		public CommandLineFormatter (IntPtr raw) : base(raw) {}

		protected CommandLineFormatter() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (GES.Formatter.class_abi.Fields);

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("ges-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr ges_command_line_formatter_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = ges_command_line_formatter_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("ges-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr ges_command_line_formatter_get_help(int nargs, IntPtr commands);

		public static string GetHelp(string[] commands) {
			int nargs = (commands == null ? 0 : commands.Length);
			IntPtr native_commands = GLib.Marshaller.StringArrayToStrvPtr(commands, false);
			IntPtr raw_ret = ges_command_line_formatter_get_help(nargs, native_commands);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.StringArrayPtrFree (native_commands, nargs);
			return ret;
		}

		[DllImport("ges-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr ges_command_line_formatter_get_timeline_uri(IntPtr timeline);

		public static string GetTimelineUri(GES.Timeline timeline) {
			IntPtr raw_ret = ges_command_line_formatter_get_timeline_uri(timeline == null ? IntPtr.Zero : timeline.Handle);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			return ret;
		}


		static CommandLineFormatter ()
		{
			GtkSharp.GstEditingServices.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, GES.Formatter.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}

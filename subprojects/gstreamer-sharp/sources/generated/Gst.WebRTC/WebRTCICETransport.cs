// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.WebRTC {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class WebRTCICETransport : Gst.Object {

		protected WebRTCICETransport (IntPtr raw) : base(raw) {}

		protected WebRTCICETransport() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[GLib.Property ("component")]
		public Gst.WebRTC.WebRTCICEComponent Component {
			get {
				GLib.Value val = GetProperty ("component");
				Gst.WebRTC.WebRTCICEComponent ret = (Gst.WebRTC.WebRTCICEComponent) (Enum) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("gathering-state")]
		public Gst.WebRTC.WebRTCICEGatheringState GatheringState {
			get {
				GLib.Value val = GetProperty ("gathering-state");
				Gst.WebRTC.WebRTCICEGatheringState ret = (Gst.WebRTC.WebRTCICEGatheringState) (Enum) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("state")]
		public Gst.WebRTC.WebRTCICEConnectionState State {
			get {
				GLib.Value val = GetProperty ("state");
				Gst.WebRTC.WebRTCICEConnectionState ret = (Gst.WebRTC.WebRTCICEConnectionState) (Enum) val;
				val.Dispose ();
				return ret;
			}
		}

		public Gst.WebRTC.WebRTCICERole Role {
			get {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + abi_info.GetFieldOffset("role"));
					return (Gst.WebRTC.WebRTCICERole) (*raw_ptr);
				}
			}
		}

		public Gst.WebRTC.WebRTCICEComponent ComponentField {
			get {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + abi_info.GetFieldOffset("component"));
					return (Gst.WebRTC.WebRTCICEComponent) (*raw_ptr);
				}
			}
		}

		public Gst.WebRTC.WebRTCICEConnectionState StateField {
			get {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + abi_info.GetFieldOffset("state"));
					return (Gst.WebRTC.WebRTCICEConnectionState) (*raw_ptr);
				}
			}
		}

		public Gst.WebRTC.WebRTCICEGatheringState GatheringStateField {
			get {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + abi_info.GetFieldOffset("gathering_state"));
					return (Gst.WebRTC.WebRTCICEGatheringState) (*raw_ptr);
				}
			}
		}

		public Gst.Element Src {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + abi_info.GetFieldOffset("src"));
					return GLib.Object.GetObject((*raw_ptr)) as Gst.Element;
				}
			}
		}

		public Gst.Element Sink {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + abi_info.GetFieldOffset("sink"));
					return GLib.Object.GetObject((*raw_ptr)) as Gst.Element;
				}
			}
		}

		[GLib.Signal("on-selected-candidate-pair-change")]
		public event System.EventHandler OnSelectedCandidatePairChange {
			add {
				this.AddSignalHandler ("on-selected-candidate-pair-change", value);
			}
			remove {
				this.RemoveSignalHandler ("on-selected-candidate-pair-change", value);
			}
		}

		[GLib.Signal("on-new-candidate")]
		public event Gst.WebRTC.OnNewCandidateHandler OnNewCandidate {
			add {
				this.AddSignalHandler ("on-new-candidate", value, typeof (Gst.WebRTC.OnNewCandidateArgs));
			}
			remove {
				this.RemoveSignalHandler ("on-new-candidate", value);
			}
		}

		static OnNewCandidateNativeDelegate OnNewCandidate_cb_delegate;
		static OnNewCandidateNativeDelegate OnNewCandidateVMCallback {
			get {
				if (OnNewCandidate_cb_delegate == null)
					OnNewCandidate_cb_delegate = new OnNewCandidateNativeDelegate (OnNewCandidate_cb);
				return OnNewCandidate_cb_delegate;
			}
		}

		static void OverrideOnNewCandidate (GLib.GType gtype)
		{
			OverrideOnNewCandidate (gtype, OnNewCandidateVMCallback);
		}

		static void OverrideOnNewCandidate (GLib.GType gtype, OnNewCandidateNativeDelegate callback)
		{
			OverrideVirtualMethod (gtype, "on-new-candidate", callback);
		}
		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void OnNewCandidateNativeDelegate (IntPtr inst, IntPtr _object);

		static void OnNewCandidate_cb (IntPtr inst, IntPtr _object)
		{
			try {
				WebRTCICETransport __obj = GLib.Object.GetObject (inst, false) as WebRTCICETransport;
				__obj.OnOnNewCandidate (GLib.Marshaller.Utf8PtrToString (_object));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(Gst.WebRTC.WebRTCICETransport), ConnectionMethod="OverrideOnNewCandidate")]
		protected virtual void OnOnNewCandidate (string _object)
		{
			InternalOnNewCandidate (_object);
		}

		private void InternalOnNewCandidate (string _object)
		{
			GLib.Value ret = GLib.Value.Empty;
			GLib.ValueArray inst_and_params = new GLib.ValueArray (2);
			GLib.Value[] vals = new GLib.Value [2];
			vals [0] = new GLib.Value (this);
			inst_and_params.Append (vals [0]);
			vals [1] = new GLib.Value (_object);
			inst_and_params.Append (vals [1]);
			g_signal_chain_from_overridden (inst_and_params.ArrayPtr, ref ret);
			foreach (GLib.Value v in vals)
				v.Dispose ();
		}

		static OnSelectedCandidatePairChangeNativeDelegate OnSelectedCandidatePairChange_cb_delegate;
		static OnSelectedCandidatePairChangeNativeDelegate OnSelectedCandidatePairChangeVMCallback {
			get {
				if (OnSelectedCandidatePairChange_cb_delegate == null)
					OnSelectedCandidatePairChange_cb_delegate = new OnSelectedCandidatePairChangeNativeDelegate (OnSelectedCandidatePairChange_cb);
				return OnSelectedCandidatePairChange_cb_delegate;
			}
		}

		static void OverrideOnSelectedCandidatePairChange (GLib.GType gtype)
		{
			OverrideOnSelectedCandidatePairChange (gtype, OnSelectedCandidatePairChangeVMCallback);
		}

		static void OverrideOnSelectedCandidatePairChange (GLib.GType gtype, OnSelectedCandidatePairChangeNativeDelegate callback)
		{
			OverrideVirtualMethod (gtype, "on-selected-candidate-pair-change", callback);
		}
		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void OnSelectedCandidatePairChangeNativeDelegate (IntPtr inst);

		static void OnSelectedCandidatePairChange_cb (IntPtr inst)
		{
			try {
				WebRTCICETransport __obj = GLib.Object.GetObject (inst, false) as WebRTCICETransport;
				__obj.OnOnSelectedCandidatePairChange ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(Gst.WebRTC.WebRTCICETransport), ConnectionMethod="OverrideOnSelectedCandidatePairChange")]
		protected virtual void OnOnSelectedCandidatePairChange ()
		{
			InternalOnSelectedCandidatePairChange ();
		}

		private void InternalOnSelectedCandidatePairChange ()
		{
			GLib.Value ret = GLib.Value.Empty;
			GLib.ValueArray inst_and_params = new GLib.ValueArray (1);
			GLib.Value[] vals = new GLib.Value [1];
			vals [0] = new GLib.Value (this);
			inst_and_params.Append (vals [0]);
			g_signal_chain_from_overridden (inst_and_params.ArrayPtr, ref ret);
			foreach (GLib.Value v in vals)
				v.Dispose ();
		}

		static GatherCandidatesNativeDelegate GatherCandidates_cb_delegate;
		static GatherCandidatesNativeDelegate GatherCandidatesVMCallback {
			get {
				if (GatherCandidates_cb_delegate == null)
					GatherCandidates_cb_delegate = new GatherCandidatesNativeDelegate (GatherCandidates_cb);
				return GatherCandidates_cb_delegate;
			}
		}

		static void OverrideGatherCandidates (GLib.GType gtype)
		{
			OverrideGatherCandidates (gtype, GatherCandidatesVMCallback);
		}

		static void OverrideGatherCandidates (GLib.GType gtype, GatherCandidatesNativeDelegate callback)
		{
			unsafe {
				IntPtr* raw_ptr = (IntPtr*)(((long) gtype.GetClassPtr()) + (long) class_abi.GetFieldOffset("gather_candidates"));
				*raw_ptr = Marshal.GetFunctionPointerForDelegate((Delegate) callback);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate bool GatherCandidatesNativeDelegate (IntPtr inst);

		static bool GatherCandidates_cb (IntPtr inst)
		{
			try {
				WebRTCICETransport __obj = GLib.Object.GetObject (inst, false) as WebRTCICETransport;
				bool __result;
				__result = __obj.OnGatherCandidates ();
				return __result;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(Gst.WebRTC.WebRTCICETransport), ConnectionMethod="OverrideGatherCandidates")]
		protected virtual bool OnGatherCandidates ()
		{
			return InternalGatherCandidates ();
		}

		private bool InternalGatherCandidates ()
		{
			GatherCandidatesNativeDelegate unmanaged = null;
			unsafe {
				IntPtr* raw_ptr = (IntPtr*)(((long) this.LookupGType().GetThresholdType().GetClassPtr()) + (long) class_abi.GetFieldOffset("gather_candidates"));
				unmanaged = (GatherCandidatesNativeDelegate) Marshal.GetDelegateForFunctionPointer(*raw_ptr, typeof(GatherCandidatesNativeDelegate));
			}
			if (unmanaged == null) return false;

			bool __result = unmanaged (this.Handle);
			return __result;
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("gather_candidates"
							, Gst.Object.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // gather_candidates
							, null
							, "_padding"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_padding"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _padding
							, "gather_candidates"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("gstwebrtc-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_webrtc_ice_transport_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gst_webrtc_ice_transport_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("gstwebrtc-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_webrtc_ice_transport_connection_state_change(IntPtr raw, int new_state);

		public void ConnectionStateChange(Gst.WebRTC.WebRTCICEConnectionState new_state) {
			gst_webrtc_ice_transport_connection_state_change(Handle, (int) new_state);
		}

		[DllImport("gstwebrtc-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_webrtc_ice_transport_gathering_state_change(IntPtr raw, int new_state);

		public void GatheringStateChange(Gst.WebRTC.WebRTCICEGatheringState new_state) {
			gst_webrtc_ice_transport_gathering_state_change(Handle, (int) new_state);
		}

		[DllImport("gstwebrtc-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_webrtc_ice_transport_new_candidate(IntPtr raw, uint stream_id, int component, IntPtr attr);

		public void NewCandidate(uint stream_id, Gst.WebRTC.WebRTCICEComponent component, string attr) {
			IntPtr native_attr = GLib.Marshaller.StringToPtrGStrdup (attr);
			gst_webrtc_ice_transport_new_candidate(Handle, stream_id, (int) component, native_attr);
			GLib.Marshaller.Free (native_attr);
		}

		[DllImport("gstwebrtc-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_webrtc_ice_transport_selected_pair_change(IntPtr raw);

		public void SelectedPairChange() {
			gst_webrtc_ice_transport_selected_pair_change(Handle);
		}


		static WebRTCICETransport ()
		{
			GtkSharp.GstreamerSharp.ObjectManager.Initialize ();
		}

		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("role"
							, Gst.Object.abi_info.Fields
							, (uint) Marshal.SizeOf(System.Enum.GetUnderlyingType(typeof(Gst.WebRTC.WebRTCICERole))) // role
							, null
							, "component"
							, (long) Marshal.OffsetOf(typeof(GstWebRTCICETransport_roleAlign), "role")
							, 0
							),
						new GLib.AbiField("component"
							, -1
							, (uint) Marshal.SizeOf(System.Enum.GetUnderlyingType(typeof(Gst.WebRTC.WebRTCICEComponent))) // component
							, "role"
							, "state"
							, (long) Marshal.OffsetOf(typeof(GstWebRTCICETransport_componentAlign), "component")
							, 0
							),
						new GLib.AbiField("state"
							, -1
							, (uint) Marshal.SizeOf(System.Enum.GetUnderlyingType(typeof(Gst.WebRTC.WebRTCICEConnectionState))) // state
							, "component"
							, "gathering_state"
							, (long) Marshal.OffsetOf(typeof(GstWebRTCICETransport_stateAlign), "state")
							, 0
							),
						new GLib.AbiField("gathering_state"
							, -1
							, (uint) Marshal.SizeOf(System.Enum.GetUnderlyingType(typeof(Gst.WebRTC.WebRTCICEGatheringState))) // gathering_state
							, "state"
							, "src"
							, (long) Marshal.OffsetOf(typeof(GstWebRTCICETransport_gathering_stateAlign), "gathering_state")
							, 0
							),
						new GLib.AbiField("src"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // src
							, "gathering_state"
							, "sink"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("sink"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // sink
							, "src"
							, "_padding"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_padding"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) * 4 // _padding
							, "sink"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct GstWebRTCICETransport_roleAlign
		{
			sbyte f1;
			private Gst.WebRTC.WebRTCICERole role;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct GstWebRTCICETransport_componentAlign
		{
			sbyte f1;
			private Gst.WebRTC.WebRTCICEComponent component;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct GstWebRTCICETransport_stateAlign
		{
			sbyte f1;
			private Gst.WebRTC.WebRTCICEConnectionState state;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct GstWebRTCICETransport_gathering_stateAlign
		{
			sbyte f1;
			private Gst.WebRTC.WebRTCICEGatheringState gathering_state;
		}


		// End of the ABI representation.

#endregion
	}
}

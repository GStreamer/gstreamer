// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.Video {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoInfoDmaDrm : IEquatable<VideoInfoDmaDrm> {

		private IntPtr _vinfo;
		public Gst.Video.VideoInfo Vinfo {
			get {
				return _vinfo == IntPtr.Zero ? null : (Gst.Video.VideoInfo) GLib.Opaque.GetOpaque (_vinfo, typeof (Gst.Video.VideoInfo), false);
			}
			set {
				_vinfo = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public uint DrmFourcc;
		public ulong DrmModifier;
		[MarshalAs (UnmanagedType.ByValArray, SizeConst=20)]
		private uint[] _gstGstReserved;

		public static Gst.Video.VideoInfoDmaDrm Zero = new Gst.Video.VideoInfoDmaDrm ();

		public static Gst.Video.VideoInfoDmaDrm New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.Video.VideoInfoDmaDrm.Zero;
			return (Gst.Video.VideoInfoDmaDrm) Marshal.PtrToStructure (raw, typeof (Gst.Video.VideoInfoDmaDrm));
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_video_info_dma_drm_new();

		public static VideoInfoDmaDrm New()
		{
			VideoInfoDmaDrm result = VideoInfoDmaDrm.New (gst_video_info_dma_drm_new());
			return result;
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_video_info_dma_drm_new_from_caps(IntPtr caps);

		public static VideoInfoDmaDrm NewFromCaps(Gst.Caps caps)
		{
			VideoInfoDmaDrm result = VideoInfoDmaDrm.New (gst_video_info_dma_drm_new_from_caps(caps == null ? IntPtr.Zero : caps.Handle));
			return result;
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_video_info_dma_drm_get_type();

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = gst_video_info_dma_drm_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gst_video_info_dma_drm_to_caps(IntPtr raw);

		public Gst.Caps ToCaps() {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			IntPtr raw_ret = gst_video_info_dma_drm_to_caps(this_as_native);
			Gst.Caps ret = raw_ret == IntPtr.Zero ? null : (Gst.Caps) GLib.Opaque.GetOpaque (raw_ret, typeof (Gst.Caps), true);
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			return ret;
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gst_video_info_dma_drm_to_video_info(IntPtr raw, out IntPtr info);

		public bool ToVideoInfo(out Gst.Video.VideoInfo info) {
			IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal (System.Runtime.InteropServices.Marshal.SizeOf (this));
			System.Runtime.InteropServices.Marshal.StructureToPtr (this, this_as_native, false);
			IntPtr native_info;
			bool raw_ret = gst_video_info_dma_drm_to_video_info(this_as_native, out native_info);
			bool ret = raw_ret;
			ReadNative (this_as_native, ref this);
			System.Runtime.InteropServices.Marshal.FreeHGlobal (this_as_native);
			info = native_info == IntPtr.Zero ? null : (Gst.Video.VideoInfo) GLib.Opaque.GetOpaque (native_info, typeof (Gst.Video.VideoInfo), false);
			return ret;
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gst_video_info_dma_drm_from_caps(IntPtr drm_info, IntPtr caps);

		public static bool FromCaps(out Gst.Video.VideoInfoDmaDrm drm_info, Gst.Caps caps) {
			IntPtr native_drm_info = Marshal.AllocHGlobal (Marshal.SizeOf (typeof (Gst.Video.VideoInfoDmaDrm)));
			bool raw_ret = gst_video_info_dma_drm_from_caps(native_drm_info, caps == null ? IntPtr.Zero : caps.Handle);
			bool ret = raw_ret;
			drm_info = Gst.Video.VideoInfoDmaDrm.New (native_drm_info);
			Marshal.FreeHGlobal (native_drm_info);
			return ret;
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gst_video_info_dma_drm_from_video_info(IntPtr drm_info, IntPtr info, ulong modifier);

		public static bool FromVideoInfo(out Gst.Video.VideoInfoDmaDrm drm_info, Gst.Video.VideoInfo info, ulong modifier) {
			IntPtr native_drm_info = Marshal.AllocHGlobal (Marshal.SizeOf (typeof (Gst.Video.VideoInfoDmaDrm)));
			bool raw_ret = gst_video_info_dma_drm_from_video_info(native_drm_info, info == null ? IntPtr.Zero : info.Handle, modifier);
			bool ret = raw_ret;
			drm_info = Gst.Video.VideoInfoDmaDrm.New (native_drm_info);
			Marshal.FreeHGlobal (native_drm_info);
			return ret;
		}

		[DllImport("gstvideo-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gst_video_info_dma_drm_init(IntPtr drm_info);

		public static Gst.Video.VideoInfoDmaDrm Init() {
			Gst.Video.VideoInfoDmaDrm drm_info;
			IntPtr native_drm_info = Marshal.AllocHGlobal (Marshal.SizeOf (typeof (Gst.Video.VideoInfoDmaDrm)));
			gst_video_info_dma_drm_init(native_drm_info);
			drm_info = Gst.Video.VideoInfoDmaDrm.New (native_drm_info);
			Marshal.FreeHGlobal (native_drm_info);
			return drm_info;
		}

		static void ReadNative (IntPtr native, ref Gst.Video.VideoInfoDmaDrm target)
		{
			target = New (native);
		}

		public bool Equals (VideoInfoDmaDrm other)
		{
			return true && Vinfo.Equals (other.Vinfo) && DrmFourcc.Equals (other.DrmFourcc) && DrmModifier.Equals (other.DrmModifier);
		}

		public override bool Equals (object other)
		{
			return other is VideoInfoDmaDrm && Equals ((VideoInfoDmaDrm) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Vinfo.GetHashCode () ^ DrmFourcc.GetHashCode () ^ DrmModifier.GetHashCode ();
		}

		public static explicit operator GLib.Value (Gst.Video.VideoInfoDmaDrm boxed)
		{
			GLib.Value val = GLib.Value.Empty;
			val.Init (Gst.Video.VideoInfoDmaDrm.GType);
			val.Val = boxed;
			return val;
		}

		public static explicit operator Gst.Video.VideoInfoDmaDrm (GLib.Value val)
		{
			return (Gst.Video.VideoInfoDmaDrm) val.Val;
		}
#endregion
	}
}

// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst.RtspServer {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDPInfo : IEquatable<SDPInfo> {

		public bool IsIpv6;
		public string ServerIp;

		public static Gst.RtspServer.SDPInfo Zero = new Gst.RtspServer.SDPInfo ();

		public static Gst.RtspServer.SDPInfo New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.RtspServer.SDPInfo.Zero;
			return (Gst.RtspServer.SDPInfo) Marshal.PtrToStructure (raw, typeof (Gst.RtspServer.SDPInfo));
		}

		public bool Equals (SDPInfo other)
		{
			return true && IsIpv6.Equals (other.IsIpv6) && ServerIp.Equals (other.ServerIp);
		}

		public override bool Equals (object other)
		{
			return other is SDPInfo && Equals ((SDPInfo) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ IsIpv6.GetHashCode () ^ ServerIp.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
